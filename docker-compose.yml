services:
  nest-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - LOG_OUTPUT=${LOG_OUTPUT}
    volumes:
      - .:/app
      - nest_api_node_modules:/app/node_modules
    command: yarn start:dev
    ports:
      - '3000:3000'
    restart: unless-stopped
    profiles:
      - dev

  nest-api-prod:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    ports:
      - '3001:3000'
    restart: unless-stopped
    profiles:
      - prod

  nest-api-test:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/app:delegated
      - npm-cache:/root/.npm
      - nest_api_node_modules:/app/node_modules
    environment:
      NODE_ENV: test
      LOG_OUTPUT: file
    command: >
      sh -c "
        # 1) garante que o Yarn exista
        corepack enable &&
        # 2) instala dependÃªncias sÃ³ se nÃ£o houver os binÃ¡rios
        if [ ! -d node_modules/.bin ] || [ -z \"\$(ls -A node_modules)\" ]; then
          echo 'ğŸ”§ Instalando dependÃªncias...'
          yarn install --frozen-lockfile
        fi &&
        # 3) roda os testes
        echo 'ğŸ§ª Rodando testes...'
        yarn test &&
        yarn test:e2e
      "
    profiles:
      - test

volumes:
  npm-cache:
  nest_api_node_modules:
